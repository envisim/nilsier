// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// NilsEstimate
Rcpp::List NilsEstimate(const Rcpp::IntegerMatrix& r_ordered_psu_size, const Rcpp::IntegerMatrix& r_cat_psu, const Rcpp::IntegerMatrix& r_tracts, const Rcpp::DataFrame& r_plot_data, const double area, const double tract_area);
RcppExport SEXP _nilsier_NilsEstimate(SEXP r_ordered_psu_sizeSEXP, SEXP r_cat_psuSEXP, SEXP r_tractsSEXP, SEXP r_plot_dataSEXP, SEXP areaSEXP, SEXP tract_areaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::IntegerMatrix& >::type r_ordered_psu_size(r_ordered_psu_sizeSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerMatrix& >::type r_cat_psu(r_cat_psuSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerMatrix& >::type r_tracts(r_tractsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type r_plot_data(r_plot_dataSEXP);
    Rcpp::traits::input_parameter< const double >::type area(areaSEXP);
    Rcpp::traits::input_parameter< const double >::type tract_area(tract_areaSEXP);
    rcpp_result_gen = Rcpp::wrap(NilsEstimate(r_ordered_psu_size, r_cat_psu, r_tracts, r_plot_data, area, tract_area));
    return rcpp_result_gen;
END_RCPP
}
// NilsBalancedEstimate
Rcpp::List NilsBalancedEstimate(const Rcpp::IntegerMatrix& r_ordered_psu_size, const Rcpp::IntegerMatrix& r_cat_psu, const Rcpp::IntegerMatrix& r_tracts, const Rcpp::DataFrame& r_plot_data, const double area, const double tract_area, Rcpp::NumericMatrix& r_xbalance);
RcppExport SEXP _nilsier_NilsBalancedEstimate(SEXP r_ordered_psu_sizeSEXP, SEXP r_cat_psuSEXP, SEXP r_tractsSEXP, SEXP r_plot_dataSEXP, SEXP areaSEXP, SEXP tract_areaSEXP, SEXP r_xbalanceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::IntegerMatrix& >::type r_ordered_psu_size(r_ordered_psu_sizeSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerMatrix& >::type r_cat_psu(r_cat_psuSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerMatrix& >::type r_tracts(r_tractsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type r_plot_data(r_plot_dataSEXP);
    Rcpp::traits::input_parameter< const double >::type area(areaSEXP);
    Rcpp::traits::input_parameter< const double >::type tract_area(tract_areaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix& >::type r_xbalance(r_xbalanceSEXP);
    rcpp_result_gen = Rcpp::wrap(NilsBalancedEstimate(r_ordered_psu_size, r_cat_psu, r_tracts, r_plot_data, area, tract_area, r_xbalance));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_nilsier_NilsEstimate", (DL_FUNC) &_nilsier_NilsEstimate, 6},
    {"_nilsier_NilsBalancedEstimate", (DL_FUNC) &_nilsier_NilsBalancedEstimate, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_nilsier(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
